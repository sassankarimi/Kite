{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from \"react\";\n//UI Librarires\nimport { makeStyles, AppBar, Tabs, Tab, Typography, Box } from \"@material-ui/core\";\nimport Slider from \"react-slick\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Container } from \"reactstrap\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadHeader, loadTour } from \"../redux/tourTabs/actions\"; //Routing\n\nimport ports from \"../ports\";\nimport Link from \"next/link\"; //css\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"; //materai ui tab function\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-force-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-force-tab-${index}`\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n} //materai ui tab function proptypes\n\n\n//materai ui tab function\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`\n  };\n} //materai ui tab styling\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {//   flexGrow: 1,\n    //   width: '100%',\n    //   backgroundColor: theme.palette.background.paper,\n  }\n}));\n\nfunction ToursTab(props) {\n  const classes = useStyles();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n  const {\n    0: showChild,\n    1: setShowChild\n  } = useState(false);\n  const groups = useSelector(state => state.tourTabsReducer.header);\n  const tours = useSelector(state => state.tourTabsReducer.tours);\n  const dispatch = useDispatch();\n  let settings = {\n    rtl: true,\n    infinite: true,\n    className: \"center\",\n    centerMode: true,\n    // dots: true,\n    // slidesToShow: 2,\n    // autoplay: true,\n    // infinite: true,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 2\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1 // width: 182\n\n      }\n    }]\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    function HomePageData() {\n      dispatch(loadHeader());\n      setShowChild(true);\n    }\n\n    HomePageData();\n  }, []);\n\n  async function handleTabs(e, newVal, gId) {\n    dispatch(loadTour(gId));\n  }\n\n  return __jsx(Container, {\n    className: \"right-to-left mt-5 mb-5 tours-tab\"\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"static\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange // variant=\"scrollable\"\n    ,\n    scrollButtons: \"on\" // indicatorColor=\"primary\"\n    // textColor=\"primary\"\n    ,\n    \"aria-label\": \"scrollable force tabs example\"\n  }, groups.map((group, index) => {\n    return __jsx(Tab, _extends({\n      key: index,\n      label: group.Title,\n      onClick: e => handleTabs(e, index, group.Id),\n      icon: __jsx(\"img\", {\n        src: `${ports.imgDomainRoutes}${group.PreviewImageFileName}`,\n        className: \"tab-img\"\n      })\n    }, a11yProps(index)));\n  }))), groups.map((group, k) => {\n    return __jsx(TabPanel, {\n      value: value,\n      index: k,\n      key: k\n    }, __jsx(Slider, _extends({\n      arrows: true,\n      slidesToShow: tours.length >= 3 ? 3 : tours.length,\n      centerMode: true\n    }, settings), tours.map((tour, i) => {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        key: tour.Priority.toString(),\n        className: \"tours-card\"\n      }, __jsx(Card, null, __jsx(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: `${ports.imgDomainRoutes}${tour.FileName}`,\n        alt: tour.Title\n      }), __jsx(CardBody, null, __jsx(CardTitle, null, __jsx(Link, {\n        href: {\n          pathname: \"/tour\",\n          query: {\n            name: tour.PageURL,\n            num: tour.PackageNumber\n          }\n        },\n        as: `tour/${tour.PackageNumber}/${tour.PageURL}`\n      }, __jsx(\"a\", null, tour.Title))), __jsx(CardSubtitle, null, tour.MinPrice), __jsx(CardText, null, tour.StartDateP, tour.FinishDateP)))));\n    })));\n  })));\n}\n\nexport default ToursTab;","map":null,"metadata":{},"sourceType":"module"}