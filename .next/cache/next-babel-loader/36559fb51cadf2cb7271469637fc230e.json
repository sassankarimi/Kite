{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SET_PACKAGE_COLLAPSE = \"SET_PACKAGE_COLLAPSE\";\nvar TOGGLE_FLIGHT = \"TOGGLE_FLIGHT\";\nvar LOADING_BOOLEAN = \"LOADING_BOOLEAN\";\nvar TOGGLE_DEFAULT_FLIGHT = \"TOGGLE_DEFAULT_FLIGHT\";\nvar initialstate = {\n  cityOrgId: [],\n  cityDesId: [],\n  //unter des Kommentars ist ein Beispiel\n  basicDatas: [],\n  name: \"\",\n  loading: false,\n  collapseToggle: [],\n  toggleFlight: [],\n  toggleDefaultFlight: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD\":\n      return _objectSpread({}, state, {\n        basicDatas: action.value\n      });\n\n    case \"ADD_ORG_ID\":\n      return _objectSpread({}, state, {\n        cityOrgId: action.value\n      });\n\n    case \"ADD_DES_ID\":\n      return _objectSpread({}, state, {\n        cityDesId: action.value\n      });\n\n    case \"REMOVE\":\n      return _objectSpread({}, state, {\n        basicDatas: []\n      });\n\n    case \"NAME\":\n      return _objectSpread({}, state, {\n        name: action.value\n      });\n\n    case LOADING_BOOLEAN:\n      return _objectSpread({}, state, {\n        loading: action.value\n      });\n\n    case SET_PACKAGE_COLLAPSE:\n      return _objectSpread({}, state, {\n        collapseToggle: action.value\n      });\n\n    case TOGGLE_FLIGHT:\n      return _objectSpread({}, state, {\n        toggleFlight: action.value\n      });\n\n    case TOGGLE_DEFAULT_FLIGHT:\n      return _objectSpread({}, state, {\n        toggleDefaultFlight: action.value\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}