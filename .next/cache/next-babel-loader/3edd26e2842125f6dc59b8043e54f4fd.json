{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\"; //redux\n\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { add_org_id, add_des_id } from \"../../redux/basicdatas/action\";\nimport { loadCity } from \"../../redux/cityList/action\"; //UI Librarires\n\nimport { FaExchangeAlt, FaRegCalendarAlt } from \"react-icons/fa\";\nimport DatePicker from \"react-modern-calendar-datepicker\";\nimport { InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport { IoIosAirplane } from \"react-icons/io\";\nimport { Button } from \"reactstrap\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { IoMdSearch } from \"react-icons/io\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { MdLens } from \"react-icons/md\"; //utilites\n\nimport { isRealValue } from \"../../Functions\"; //components\n\nimport RoundButton from \"../roundbutton\";\nimport Rooms from \"../rooms\"; //axios\n\nimport ports from \"../../ports\";\nimport axios from 'axios';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2)\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    }\n  };\n});\n\nvar TourSearch = function TourSearch(props) {\n  var _useState = useState(true),\n      isData = _useState[0],\n      setIsData = _useState[1];\n\n  var _useState2 = useState(false),\n      showChild = _useState2[0],\n      setShowChild = _useState2[1];\n\n  var _useState3 = useState(0),\n      tourCategory = _useState3[0],\n      setTourCategory = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      valueOrigin = _useState4[0],\n      setValueOrigin = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      cityIdOrg = _useState5[0],\n      setCityIdOrg = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      cityIdDes = _useState6[0],\n      setCityIdDes = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      valueDestination = _useState7[0],\n      setValueDestination = _useState7[1];\n\n  var _useState8 = useState(props.searchParams.org),\n      originString = _useState8[0],\n      setOriginString = _useState8[1];\n\n  var _useState9 = useState(props.searchParams.des),\n      destinationString = _useState9[0],\n      setDestinationString = _useState9[1];\n\n  var _useState10 = useState(false),\n      open = _useState10[0],\n      setOpen = _useState10[1];\n\n  var _useState11 = useState(null),\n      selectedDayOrg = _useState11[0],\n      setSelectedDayOrg = _useState11[1];\n\n  var _useState12 = useState(null),\n      selectedDayDes = _useState12[0],\n      setSelectedDayDes = _useState12[1];\n\n  var _useState13 = useState([]),\n      cityList = _useState13[0],\n      setcityList = _useState13[1];\n\n  var dispatch = useDispatch();\n  var rooms = useSelector(function (state) {\n    return state.roomsReducer.rooms;\n  });\n  var inc1 = useSelector(function (state) {\n    return state.roomsReducer.adultArray;\n  });\n  var inc2 = useSelector(function (state) {\n    return state.roomsReducer.childArray;\n  });\n  var selValues = useSelector(function (state) {\n    return state.roomsReducer.selValues;\n  });\n  var total = useSelector(function (state) {\n    return state.roomsReducer.total;\n  });\n  var infantCount = useSelector(function (state) {\n    return state.roomsReducer.infantCount;\n  });\n  var child1Count = useSelector(function (state) {\n    return state.roomsReducer.child1Count;\n  });\n  var child2Count = useSelector(function (state) {\n    return state.roomsReducer.child2Count;\n  }); //end of useless states\n\n  var _useState14 = useState(new Date().getTime()),\n      forceRender = _useState14[0],\n      setForceRender = _useState14[1];\n\n  var classes = useStyles();\n\n  var handleChange = function handleChange(event) {\n    setTourCategory(event.target.value);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  useEffect(function () {\n    function defultValues() {\n      axios.get(\"\".concat(ports.domain).concat(ports.cityList)).then(function (response) {\n        switch (response.status) {\n          case 200:\n            return response.data;\n\n          default:\n            return false;\n        }\n      })[\"catch\"](function (error) {\n        return _Promise.reject(error);\n      }).then(function (data) {\n        if (data && data.length > 0) {\n          data.sort(function (a) {\n            return a.CountryAbbrevation === 'IR' ? -1 : 1;\n          });\n          setcityList(data);\n\n          if (isRealValue(props.searchParams.org) && props.searchParams.org.length !== 0) {\n            var cTsOrg = props.searchParams.org.split(\"-\");\n            var defaultOrgValue = [];\n            cTsOrg.map(function (element) {\n              var temp = data.filter(function (item) {\n                return item.CityAbbrevation === element;\n              });\n              defaultOrgValue.push(temp[0]);\n            });\n            setValueOrigin(defaultOrgValue);\n          }\n\n          if (isRealValue(props.searchParams.des) && props.searchParams.des.length !== 0) {\n            var cTsDes = props.searchParams.des.split(\"-\");\n            var defaultDesValue = [];\n            cTsDes.map(function (element) {\n              var temp = data.filter(function (item) {\n                return item.CityAbbrevation === element;\n              });\n              defaultDesValue.push(temp[0]);\n            });\n            setValueDestination(defaultDesValue);\n          }\n        }\n      });\n\n      if (isRealValue(props.searchParams.departing) && _parseInt(props.searchParams.departing.split(\"-\").length) === 3) {\n        var defaultDateFrom = {\n          day: _parseInt(props.searchParams.departing.split(\"-\")[2]) || null,\n          month: _parseInt(props.searchParams.departing.split(\"-\")[1]) || null,\n          year: _parseInt(props.searchParams.departing.split(\"-\")[0]) || null\n        };\n        setSelectedDayOrg(defaultDateFrom);\n      }\n\n      if (isRealValue(props.searchParams.returning) && _parseInt(props.searchParams.returning.split(\"-\").length) === 3) {\n        var defaultDateTo = {\n          day: _parseInt(props.searchParams.returning.split(\"-\")[2]) || null,\n          month: _parseInt(props.searchParams.returning.split(\"-\")[1]) || null,\n          year: _parseInt(props.searchParams.returning.split(\"-\")[0]) || null\n        };\n        setSelectedDayDes(defaultDateTo);\n      }\n\n      setIsData(true);\n      setShowChild(true);\n    }\n\n    defultValues();\n  }, []);\n\n  function getOptionSelectedOrigin(event, value) {\n    setValueOrigin(value);\n    var str = \"\";\n    var ctId = [];\n\n    for (var i = 0; i < value.length; i++) {\n      if (i === value.length - 1) str += value[i].CityAbbrevation;else str += value[i].CityAbbrevation + \"-\";\n      ctId.push(value[i].CityId);\n    }\n\n    setOriginString(str);\n    setCityIdOrg(ctId); //city orgId set in redux\n\n    props.dispatch(add_org_id(ctId)); //console.log(\"origin\", str);\n  }\n\n  function getOptionSelectedDestination(event, value) {\n    setValueDestination(value);\n    var str = \"\";\n    var ctId = [];\n\n    for (var i = 0; i < value.length; i++) {\n      if (i === value.length - 1) str += value[i].CityAbbrevation;else str += value[i].CityAbbrevation + \"-\";\n      ctId.push(value[i].CityId);\n    }\n\n    setDestinationString(str);\n    setCityIdDes(ctId); //city desId set in redux\n\n    props.dispatch(add_des_id(ctId));\n  }\n\n  function handleChangeOrgDes() {\n    var tempOrg = valueOrigin;\n    var tempDes = valueDestination;\n    var tempOrgStr = originString;\n    var tempDesStr = destinationString;\n    var tempOrgID = cityIdOrg;\n    var tempDesId = cityIdDes;\n    setCityIdOrg(tempDesId); //city orgId set in redux\n\n    props.dispatch(add_org_id(tempDesId));\n    setCityIdDes(tempOrgID); //city desId set in redux\n\n    props.dispatch(add_des_id(tempOrgID));\n    setOriginString(tempDesStr);\n    setDestinationString(tempOrgStr);\n    setValueOrigin(tempDes);\n    setValueDestination(tempOrg);\n  }\n\n  var dateOrigin = 0;\n  var dateDestination = 0;\n\n  if (selectedDayOrg !== null) {\n    var orgD = selectedDayOrg.day.toString().length === 1 ? \"0\".concat(selectedDayOrg.day) : selectedDayOrg.day;\n    var orgM = selectedDayOrg.month.toString().length === 1 ? \"0\".concat(selectedDayOrg.month) : selectedDayOrg.month;\n    dateOrigin = selectedDayOrg.year + \"-\" + orgM + \"-\" + orgD;\n  }\n\n  if (selectedDayDes !== null) {\n    var desD = selectedDayDes.day.length === 1 ? \"0\".concat(selectedDayDes.day) : selectedDayDes.day;\n    var desM = selectedDayDes.month.length === 1 ? \"0\".concat(selectedDayDes.month) : selectedDayDes.month;\n    dateDestination = selectedDayDes.year + \"-\" + desM + \"-\" + desD;\n  }\n\n  var adultCount = inc1.reduce(function myFunc(a, b) {\n    return a + b;\n  });\n  var roomRules = \"\";\n\n  for (var i = 0; i < selValues.length; i++) {\n    var adult = selValues[i].adult;\n    var infant = 0;\n    var child1 = 0;\n    var child2 = 0;\n\n    for (var j = 0; j < selValues[i].age.length; j++) {\n      if (selValues[i].age[j] === 0 || selValues[i].age[j] === 1) {\n        infant = infant + 1;\n      }\n\n      if (selValues[i].age[j] === 2 || selValues[i].age[j] === 3 || selValues[i].age[j] === 4 || selValues[i].age[j] === 5) {\n        child1 = child1 + 1;\n      }\n\n      if (selValues[i].age[j] === 6 || selValues[i].age[j] === 7 || selValues[i].age[j] === 8 || selValues[i].age[j] === 9 || selValues[i].age[j] === 10 || selValues[i].age[j] === 11) {\n        child2 = child2 + 1;\n      }\n    }\n\n    var einRoom = adult.toString().concat(child1.toString(), child2.toString(), infant.toString());\n    if (roomRules === \"\") roomRules = roomRules.concat(einRoom);else roomRules = roomRules.concat(\",\", einRoom);\n  }\n\n  var searchParams = {\n    org: originString,\n    des: destinationString,\n    adult: adultCount,\n    infant: infantCount,\n    child1: child1Count,\n    child2: child2Count,\n    roomCount: rooms,\n    roomRules: roomRules.toString(),\n    orgDate: dateOrigin.toString(),\n    desDate: dateDestination.toString(),\n    tourCategory: tourCategory,\n    selValues: _JSON$stringify(selValues)\n  };\n  return __jsx(\"div\", {\n    className: \"search-booking\"\n  }, __jsx(\"div\", {\n    className: \"inputgroups\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    md: \"6\",\n    className: \"airport-col no-padding\"\n  }, __jsx(InputGroup, null, __jsx(Autocomplete, {\n    className: \"airport-auto form-control\",\n    multiple: true,\n    value: valueOrigin // open={true}\n    ,\n    filterSelectedOptions: true,\n    id: \"fixed-tags-demo\",\n    options: cityList,\n    groupBy: function groupBy(option) {\n      return option.CountryAbbrevation === \"IR\" ? \"شهرهای پرتردد\" : \"سایر شهرها\";\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return __jsx(\"div\", null, __jsx(MdLens, {\n        className: \"pl-1\",\n        size: \"10\",\n        color: \"#65bfbe\"\n      }), __jsx(\"span\", {\n        className: \"optionRight\"\n      }, option.CityTitle_Persian), __jsx(\"span\", {\n        className: \"optionLeft-autocomplete\"\n      }, option.CityAbbrevation));\n    } //defaultValue={[ top100Films[13]]}\n    ,\n    onChange: function onChange(e, value) {\n      return getOptionSelectedOrigin(e, value);\n    } // getOptionSelected={getSelectedAus(value)}\n    ,\n    renderTags: function renderTags(value, getTagProps) {\n      return value.map(function (option, index) {\n        return __jsx(Chip, _extends({\n          key: index,\n          label: option.CityTitle_Persian\n        }, getTagProps({\n          index: index\n        })));\n      });\n    },\n    style: {\n      width: \"100%\",\n      fontFamily: \"IRANSansWeb\"\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"outlined\" // placeholder=\"Favorites\"\n        ,\n        fullWidth: true\n      }));\n    }\n  }), __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    className: \"airport-append\"\n  }, __jsx(InputGroupText, null, __jsx(\"div\", {\n    className: \"source-plane\"\n  }, __jsx(IoIosAirplane, null)), \"\\u0645\\u0628\\u062F\\u0627\\u064C\\u061F\"))), __jsx(Button, {\n    onClick: handleChangeOrgDes,\n    className: \"input-btn exchange-input-btn\"\n  }, __jsx(FaExchangeAlt, {\n    className: \"exchangebtn\"\n  })), __jsx(InputGroup, {\n    className: \"airport-dest\"\n  }, __jsx(Autocomplete, {\n    className: \"airport-auto form-control\",\n    multiple: true //open={true}\n    ,\n    value: valueDestination,\n    filterSelectedOptions: true,\n    id: \"fixed-tags-2\",\n    options: cityList,\n    groupBy: function groupBy(toption) {\n      return toption.CountryAbbrevation === \"IR\" ? \"شهرهای پرتردد\" : \"سایر شهرها\";\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return __jsx(\"div\", null, __jsx(MdLens, {\n        className: \"pl-1\",\n        size: \"10\",\n        color: \"#65bfbe\"\n      }), __jsx(\"span\", {\n        className: \"optionRight\"\n      }, option.CityTitle_Persian), __jsx(\"span\", {\n        className: \"optionLeft-autocomplete\"\n      }, option.CityAbbrevation));\n    } //defaultValue={[ top100Films[13]]}\n    ,\n    onChange: function onChange(e, value) {\n      return getOptionSelectedDestination(e, value);\n    } // getOptionSelected={getSelectedAus(value)}\n    ,\n    renderTags: function renderTags(value, getTagProps) {\n      return value.map(function (option, index) {\n        return __jsx(Chip, _extends({\n          label: option.CityTitle_Persian\n        }, getTagProps({\n          index: index\n        })));\n      });\n    },\n    style: {\n      width: \"100%\",\n      fontFamily: \"IRANSansWeb\"\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"outlined\" // placeholder=\"Favorites\"\n        ,\n        fullWidth: true\n      }));\n    }\n  }), __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    className: \"airport-append\"\n  }, __jsx(InputGroupText, null, __jsx(\"div\", {\n    className: \"dest-plane\"\n  }, __jsx(IoIosAirplane, null)), \"\\u0645\\u0642\\u0635\\u062F\\u061F\")))), __jsx(Col, {\n    md: \"6\",\n    className: \"date-col no-padding\"\n  }, __jsx(InputGroup, null, __jsx(InputGroupAddon, {\n    addonType: \"append\"\n  }, __jsx(InputGroupText, null, __jsx(\"div\", {\n    className: \"calendar-icon\"\n  }, __jsx(FaRegCalendarAlt, null)), \"\\u062A\\u0627\\u0631\\u06CC\\u062E \\u0631\\u0641\\u062A\", __jsx(DatePicker, {\n    value: selectedDayOrg,\n    onChange: setSelectedDayOrg,\n    inputPlaceholder: \" \",\n    shouldHighlightWeekends: true,\n    locale: \"fa\"\n  })))), __jsx(InputGroup, null, __jsx(InputGroupAddon, {\n    addonType: \"append\"\n  }, __jsx(InputGroupText, null, __jsx(\"div\", {\n    className: \"calendar-icon\"\n  }, __jsx(FaRegCalendarAlt, null)), \"\\u062A\\u0627\\u0631\\u06CC\\u062E \\u0628\\u0631\\u06AF\\u0634\\u062A\", __jsx(DatePicker, {\n    value: selectedDayDes,\n    onChange: setSelectedDayDes,\n    inputPlaceholder: \" \",\n    shouldHighlightWeekends: true,\n    locale: \"fa\"\n  })))), __jsx(\"span\", {\n    className: \"input-btn\"\n  }, __jsx(RoundButton, {\n    searchParams: searchParams,\n    link: ports.toursRoute,\n    roomData: selValues // name=\"جستــجو\"\n    ,\n    icon: __jsx(IoMdSearch, null)\n  })))))), __jsx(\"div\", {\n    className: \"search-dropdown\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    md: \"6\",\n    xs: \"12\"\n  }, __jsx(\"div\", {\n    className: \"tour-type right-to-left\"\n  }, __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: \"demo-controlled-open-select-label\"\n  }, \"\\u0633\\u0628\\u06A9 \\u062A\\u0648\\u0631\"), __jsx(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: tourCategory,\n    onChange: handleChange\n  }, __jsx(MenuItem, {\n    value: \"\"\n  }, __jsx(\"em\", null, \"\\u0647\\u0645\\u0647 \\u0645\\u0648\\u0627\\u0631\\u062F\")), __jsx(MenuItem, {\n    value: 10\n  }, \"\\u062A\\u0641\\u0631\\u06CC\\u062D\\u06CC\"), __jsx(MenuItem, {\n    value: 20\n  }, \"\\u0637\\u0628\\u06CC\\u0639\\u062A \\u06AF\\u0631\\u062F\\u06CC\"), __jsx(MenuItem, {\n    value: 30\n  }, \"\\u0632\\u06CC\\u0627\\u0631\\u062A\\u06CC\")), __jsx(MdKeyboardArrowDown, null)))), __jsx(Col, {\n    md: \"6\",\n    xs: \"12\"\n  }, __jsx(Rooms, null))))));\n};\n\nexport default connect()(TourSearch);","map":null,"metadata":{},"sourceType":"module"}