{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actionTypes } from './type';\nexport var exampleInitialState = {\n  rooms: 1,\n  adultArray: [2],\n  childArray: [0],\n  total: 2,\n  child1Count: 0,\n  child2Count: 0,\n  infantCount: 0,\n  selValues: [{\n    id: 0,\n    adult: 2,\n    age: []\n  }],\n  roomRules: \"\"\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_ROOMS:\n      return _objectSpread({}, state, {\n        rooms: action.payload\n      });\n\n    case actionTypes.SET_TOTAL:\n      return _objectSpread({}, state, {\n        total: action.payload\n      });\n\n    case actionTypes.SET_SELVALUES:\n      return _objectSpread({}, state, {\n        selValues: action.payload\n      });\n\n    case actionTypes.SET_ADULT_ARRAY:\n      return _objectSpread({}, state, {\n        adultArray: action.payload\n      });\n\n    case actionTypes.SET_CHILD_ARRAY:\n      return _objectSpread({}, state, {\n        childArray: action.payload\n      });\n\n    case actionTypes.SET_INFANTCOUNT:\n      return _objectSpread({}, state, {\n        infantCount: action.payload\n      });\n\n    case actionTypes.SET_CHILD1COUNT:\n      return _objectSpread({}, state, {\n        child1Count: action.payload\n      });\n\n    case actionTypes.SET_CHILD2COUNT:\n      return _objectSpread({}, state, {\n        child2Count: action.payload\n      });\n\n    case actionTypes.SET_ROOMRULES:\n      return _objectSpread({}, state, {\n        roomRules: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}