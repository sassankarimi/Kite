{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState } from \"react\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setAdultArray, setChild1, setChild2, setChildArray, setInfant, setRooms, setSelValues, setTotal } from \"../redux/rooms/action\"; //UI Libraries\n\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { Label, Input, Button, FormGroup } from \"reactstrap\"; //used for room menu\n\nvar Counter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Counter, _React$Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"increamentClicks\", function () {\n      var id = _this.props.id;\n\n      _this.props.increament(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decreamentClicks\", function () {\n      var id = _this.props.id;\n\n      _this.props.decreament(id);\n    });\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"counter\"\n      }, __jsx(\"button\", {\n        className: \"btn counter-btn\",\n        onClick: this.increamentClicks\n      }, \"+\"), __jsx(\"span\", null, this.props.count), __jsx(\"button\", {\n        className: \"btn counter-btn\",\n        onClick: this.decreamentClicks\n      }, \"-\"));\n    }\n  }]);\n\n  return Counter;\n}(React.Component); //used for room menu\n\n\nvar ChildCounter =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ChildCounter, _React$Component2);\n\n  function ChildCounter(props) {\n    var _this2;\n\n    _classCallCheck(this, ChildCounter);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ChildCounter).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this2), \"increamentClicks\", function () {\n      var id = _this2.props.id;\n\n      _this2.props.increament(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"decreamentClicks\", function () {\n      var id = _this2.props.id;\n\n      _this2.props.decreament(id);\n    });\n\n    _this2.state = {\n      selValues: []\n    };\n    _this2.createUI = _this2.createUI.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(ChildCounter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      // Typical usage (don't forget to compare props):\n      if (this.props.selValues !== prevProps.selValues) {\n        this.setState({\n          selValues: this.props.selValues.filter(function (value) {\n            return value.id === _this3.props.id;\n          })\n        });\n      }\n    }\n  }, {\n    key: \"handleChangeSelectValues\",\n    value: function handleChangeSelectValues(i, e) {\n      var roomId = this.props.id; //room index\n\n      var ageValue = e.target.value; //age index\n\n      this.props.changeSelValue(roomId, i, ageValue);\n    }\n  }, {\n    key: \"createUI\",\n    value: function createUI() {\n      var _this4 = this;\n\n      return this.props.selValues[this.props.id].age.map(function (el, index) {\n        return __jsx(\"div\", {\n          key: index\n        }, __jsx(FormGroup, {\n          className: \"add-age\"\n        }, __jsx(Label, {\n          \"for\": \"exampleSelect\"\n        }, \"\\u0633\\u0646 \\u06A9\\u0648\\u062F\\u06A9 \", index + 1), __jsx(Input, {\n          type: \"select\",\n          value: el,\n          name: \"select\",\n          onChange: _this4.handleChangeSelectValues.bind(_this4, index),\n          id: \"exampleSelect\"\n        }, __jsx(\"option\", {\n          value: \"0\"\n        }, \"\\u062A\\u0627 1 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"1\"\n        }, \"1 \\u062A\\u0627 2 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"2\"\n        }, \"2 \\u062A\\u0627 3 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"3\"\n        }, \"3 \\u062A\\u0627 4 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"4\"\n        }, \"4 \\u062A\\u0627 5 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"5\"\n        }, \"5 \\u062A\\u0627 6 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"6\"\n        }, \"6 \\u062A\\u0627 7 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"7\"\n        }, \"7 \\u062A\\u0627 8 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"8\"\n        }, \"8 \\u062A\\u0627 9 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"9\"\n        }, \"9 \\u062A\\u0627 10 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"10\"\n        }, \"10 \\u062A\\u0627 11 \\u0633\\u0627\\u0644\"), __jsx(\"option\", {\n          value: \"11\"\n        }, \"11 \\u062A\\u0627 12 \\u0633\\u0627\\u0644\"))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"counter\"\n      }, __jsx(\"button\", {\n        className: \"btn counter-btn\",\n        onClick: this.increamentClicks\n      }, \"+\"), __jsx(\"span\", null, this.props.count), __jsx(\"button\", {\n        className: \"btn counter-btn\",\n        onClick: this.decreamentClicks\n      }, \"-\"), this.createUI());\n    }\n  }]);\n\n  return ChildCounter;\n}(React.Component);\n\nvar Rooms = function Rooms(props) {\n  var dispatch = useDispatch();\n  var rooms = useSelector(function (state) {\n    return state.roomsReducer.rooms;\n  });\n  var inc1 = useSelector(function (state) {\n    return state.roomsReducer.adultArray;\n  });\n  var inc2 = useSelector(function (state) {\n    return state.roomsReducer.childArray;\n  });\n  var selValues = useSelector(function (state) {\n    return state.roomsReducer.selValues;\n  });\n  var total = useSelector(function (state) {\n    return state.roomsReducer.total;\n  });\n  var infantCount = useSelector(function (state) {\n    return state.roomsReducer.infantCount;\n  });\n  var child1Count = useSelector(function (state) {\n    return state.roomsReducer.child1Count;\n  });\n  var child2Count = useSelector(function (state) {\n    return state.roomsReducer.child2Count;\n  });\n  var roomArr = [];\n\n  function removeRooms() {\n    //adult person\n    var tempInc1 = inc1;\n    var tempAdult;\n    tempAdult = tempInc1.pop();\n    dispatch(setAdultArray(tempInc1)); //child person\n\n    var tempInc2 = inc2;\n    var tempChild;\n    tempChild = tempInc2.pop();\n    dispatch(setChildArray(tempInc2)); //rooms\n\n    dispatch(setRooms(rooms - 1));\n    dispatch(setTotal(total - tempChild - tempAdult));\n    var tempSelValues = selValues;\n    tempSelValues = selValues.filter(function (value) {\n      return value.id !== rooms - 1;\n    });\n    dispatch(setSelValues(tempSelValues));\n    var removeRoomArray = selValues.filter(function (value) {\n      return value.id == rooms - 1;\n    });\n    var removeRoomArrayAge = removeRoomArray[0].age;\n    var numOfInfant = 0;\n    var numOfChild1 = 0;\n    var numOfChild2 = 0;\n\n    for (var j = 0; j < removeRoomArrayAge.length; j++) {\n      if (removeRoomArrayAge[j] === 0 || removeRoomArrayAge[j] === 1) {\n        numOfInfant++;\n      } else if (removeRoomArrayAge[j] === 2 || removeRoomArrayAge[j] === 3 || removeRoomArrayAge[j] === 4 || removeRoomArrayAge[j] === 5) {\n        numOfChild1++;\n      } else if (removeRoomArrayAge[j] === 6 || removeRoomArrayAge[j] === 7 || removeRoomArrayAge[j] === 8 || removeRoomArrayAge[j] === 9 || removeRoomArrayAge[j] === 10 || removeRoomArrayAge[j] === 11) {\n        numOfChild2++;\n      }\n    }\n\n    dispatch(setInfant(_parseInt(infantCount) - numOfInfant));\n    dispatch(setChild1(_parseInt(child1Count) - numOfChild1));\n    dispatch(setChild2(_parseInt(child2Count) - numOfChild2));\n  }\n\n  function addRooms() {\n    //adult person\n    var tempInc1 = [].concat(_toConsumableArray(inc1), [1]);\n    dispatch(setAdultArray(tempInc1)); //child person\n\n    var tempInc2 = [].concat(_toConsumableArray(inc2), [0]);\n    dispatch(setChildArray(tempInc2)); //rooms\n\n    dispatch(setRooms(rooms + 1));\n    dispatch(setTotal(1 + total));\n    var tempSelValues = selValues;\n    tempSelValues.push({\n      id: rooms,\n      adult: 1,\n      age: []\n    });\n    dispatch(setSelValues(tempSelValues));\n  }\n\n  function handleIncreamentA(i) {\n    var valueInc1 = inc1;\n    valueInc1[i] = inc1[i] + 1;\n    dispatch(setAdultArray(valueInc1));\n    dispatch(setTotal(total + 1));\n    var arrSel = selValues;\n    var arrAge = selValues.filter(function (value) {\n      return value.id === i;\n    });\n\n    if (arrAge.length > 0) {\n      var newObj = {\n        id: i,\n        adult: valueInc1[i],\n        age: arrAge[0].age\n      };\n      arrSel.splice(i, 1, newObj);\n    }\n\n    dispatch(setSelValues(arrSel));\n  }\n\n  function handleIncreamentB(i) {\n    var valueInc2 = inc2;\n    valueInc2[i] = inc2[i] + 1;\n    dispatch(setChildArray(valueInc2));\n    dispatch(setTotal(total + 1));\n    var arrSel = selValues;\n    var arrAge = selValues.filter(function (value) {\n      return value.id === i;\n    });\n    var newObj = {};\n\n    if (arrAge.length > 0) {\n      arrAge[0].age.push(0);\n      newObj = {\n        id: i,\n        adult: inc1[i],\n        age: arrAge[0].age\n      }; //infant first value option\n    } else {\n      newObj = {\n        id: i,\n        adult: inc1[i],\n        age: [0]\n      }; //infant first value option\n    }\n\n    dispatch(setInfant(infantCount + 1));\n    arrSel.splice(i, 1, newObj);\n    dispatch(setSelValues(arrSel));\n  }\n\n  function handleDecreamentA(i) {\n    if (inc1[i] > 1) {\n      var valueInc1 = inc1;\n      valueInc1[i] = inc1[i] - 1;\n      dispatch(setAdultArray(valueInc1));\n      dispatch(setTotal(total - 1));\n      var arrSel = selValues;\n      var arrAge = selValues.filter(function (value) {\n        return value.id === i;\n      });\n\n      if (arrAge.length > 0) {\n        var newObj = {\n          id: i,\n          adult: valueInc1[i],\n          age: arrAge[0].age\n        };\n        arrSel.splice(i, 1, newObj);\n      }\n\n      dispatch(setSelValues(arrSel));\n    }\n  }\n\n  function handleDecreamentB(i) {\n    if (inc2[i] > 0) {\n      var valueInc2 = inc2;\n      valueInc2[i] = inc2[i] - 1;\n      dispatch(setChildArray(valueInc2));\n      dispatch(setTotal(total - 1));\n      var arrSel = selValues;\n      var arrAge = selValues.filter(function (value) {\n        return value.id === i;\n      });\n\n      if (arrAge.length > 0) {\n        var childAge = arrAge[0].age.pop();\n\n        if (childAge === 0 || childAge === 1) {\n          dispatch(setInfant(_parseInt(infantCount) - 1));\n        } else if (childAge === 2 || childAge === 3 || childAge === 4 || childAge === 5) {\n          dispatch(setChild1(_parseInt(child1Count) - 1));\n        } else if (childAge === 6 || childAge === 7 || childAge === 8 || childAge === 9 || childAge === 10 || childAge === 11) {\n          dispatch(setChild2(_parseInt(child2Count) - 1));\n        }\n\n        var newObj = {\n          id: i,\n          adult: inc1[i],\n          age: arrAge[0].age\n        };\n        arrSel.splice(i, 1, newObj);\n        dispatch(setSelValues(arrSel));\n      }\n    }\n  }\n\n  function _changeSelValue(roomId, ageId, ageValue) {\n    var rooms = selValues;\n    var room = selValues.filter(function (arr) {\n      return arr.id === roomId;\n    }); //set Count of childs\n\n    if (_parseInt(room[0].age[ageId]) === 0) dispatch(setInfant(infantCount - 1));\n    if (_parseInt(room[0].age[ageId]) === 1) dispatch(setChild1(child1Count - 1));\n    if (_parseInt(room[0].age[ageId]) === 2) dispatch(setChild2(child2Count - 1));\n\n    if (_parseInt(ageValue) === 0 || _parseInt(ageValue) === 1) {\n      dispatch(setInfant(infantCount + 1));\n    }\n\n    if (_parseInt(ageValue) === 2 || _parseInt(ageValue) === 3 || _parseInt(ageValue) === 4 || _parseInt(ageValue) === 5) {\n      dispatch(setChild1(child1Count + 1));\n    }\n\n    if (_parseInt(ageValue) === 6 || _parseInt(ageValue) === 7 || _parseInt(ageValue) === 8 || _parseInt(ageValue) === 9 || _parseInt(ageValue) === 10 || _parseInt(ageValue) === 11) {\n      dispatch(setChild2(child2Count + 1));\n    }\n\n    room[0].age[ageId] = _parseInt(ageValue);\n    rooms.splice(roomId, 1, room[0]);\n    dispatch(setSelValues(rooms));\n  } //room menu structure\n\n\n  for (var i = 0; i < rooms; i++) {\n    var inc1Count = inc1[i];\n    var inc2Count = inc2[i];\n    roomArr.push(__jsx(\"div\", {\n      className: \"push-room\"\n    }, __jsx(\"hr\", null), __jsx(\"p\", {\n      className: \"room-label\"\n    }, \"\\u0627\\u062A\\u0627\\u0642 \", i + 1), __jsx(\"div\", {\n      className: \"line-counter\"\n    }, __jsx(\"span\", {\n      className: \"label\"\n    }, \"\\u0628\\u0632\\u0631\\u06AF\\u0633\\u0627\\u0644\"), __jsx(Counter, {\n      count: inc1Count,\n      id: i,\n      increament: handleIncreamentA,\n      decreament: handleDecreamentA\n    })), __jsx(\"div\", {\n      className: \"line-counter\"\n    }, __jsx(\"span\", {\n      className: \"label\"\n    }, \"\\u06A9\\u0648\\u062F\\u06A9\"), __jsx(\"div\", {\n      className: \"child-age\"\n    }, __jsx(ChildCounter, {\n      changeSelValue: function changeSelValue(roomId, ageId, ageValue) {\n        return _changeSelValue(roomId, ageId, ageValue);\n      },\n      count: inc2Count,\n      id: i,\n      selValues: selValues,\n      increament: handleIncreamentB,\n      decreament: handleDecreamentB\n    })))));\n  }\n\n  return __jsx(Fragment, null, __jsx(MDBDropdown, {\n    size: \"sm\",\n    className: \"passenger-number\"\n  }, __jsx(MDBDropdownToggle, {\n    caret: true\n  }, \"\\u0645\\u0633\\u0627\\u0641\\u0631\\u0627\\u0646 + \\u0627\\u062A\\u0627\\u0642\", __jsx(\"span\", {\n    className: \"total-num\"\n  }, total, \" \\u0645\\u0633\\u0627\\u0641\\u0631\"), __jsx(\"span\", {\n    className: \"total-num\"\n  }, rooms, \" \\u0627\\u062A\\u0627\\u0642\"), __jsx(MdKeyboardArrowDown, null)), __jsx(MDBDropdownMenu, {\n    className: \"dropdown-counter\",\n    color: \"danger\",\n    basic: true\n  }, __jsx(\"div\", {\n    className: \"add-room\"\n  }, __jsx(Button, {\n    color: \"secondary\",\n    size: \"sm\",\n    onClick: addRooms,\n    className: \"add-btn\"\n  }, \"\\u0627\\u0641\\u0632\\u0648\\u062F\\u0646 \\u0627\\u062A\\u0627\\u0642\"), roomArr.map(function (value, k) {\n    return __jsx(\"div\", {\n      key: k\n    }, value);\n  }), rooms > 1 ? __jsx(\"div\", null, __jsx(\"hr\", null), __jsx(Button, {\n    color: \"secondary\",\n    size: \"sm\",\n    onClick: removeRooms,\n    className: \"add-btn\"\n  }, \"\\u062D\\u0630\\u0641 \\u0627\\u062A\\u0627\\u0642\")) : __jsx(\"span\", null), __jsx(MDBDropdownItem, {\n    className: \"done-btn\",\n    type: \"button\"\n  }, \"\\u062A\\u0627\\u06CC\\u06CC\\u062F\")))));\n};\n\nexport default Rooms;","map":null,"metadata":{},"sourceType":"module"}