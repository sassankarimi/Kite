{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport * as tourTabsSaga from './tourTabs/saga';\nimport * as cityListSaga from './cityList/saga';\nimport * as weblogGridSaga from './weblogGrid/saga';\nimport * as searchTourSaga from './searchtour/saga';\nes6promise.polyfill();\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([].concat(_toConsumableArray(_Object$values(tourTabsSaga)), _toConsumableArray(_Object$values(cityListSaga)), _toConsumableArray(_Object$values(weblogGridSaga)), _toConsumableArray(_Object$values(searchTourSaga))).map(fork));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default rootSaga;","map":null,"metadata":{},"sourceType":"module"}