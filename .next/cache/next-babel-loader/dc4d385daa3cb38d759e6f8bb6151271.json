{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadCitySaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadCityWatcher);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch'; //imports\n\nimport { loadCitySuccess, failure } from './action';\nimport { actionTypes } from './type';\nimport ports from '../../ports';\nes6promise.polyfill(); //CITY worker\n\nfunction loadCitySaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadCitySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"\".concat(ports.domain).concat(ports.cityList));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          //console.log(\"cities\" , data)\n          data.sort(function (a) {\n            return a.CountryAbbrevation === \"IR\" ? -1 : 1;\n          });\n          _context.next = 10;\n          return put(loadCitySuccess(data));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(failure(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n} //CITY watcher\n\n\nfunction loadCityWatcher() {\n  return _regeneratorRuntime.wrap(function loadCityWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actionTypes.LOAD_CITY, loadCitySaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default loadCityWatcher;","map":null,"metadata":{},"sourceType":"module"}