{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport Nav from '../components/navbar';\nimport Bgtext from '../components/bgtext';\nimport Footer from '../components/footer';\nimport { Container } from 'reactstrap';\nimport InformationCards from '../components/tour/infoCards';\nimport { add_item, check_item, set_package_collapse, toggle_flight } from '../redux/basicdatas/action';\nimport { default_toggle_flight } from '../redux/tourFilters/action';\nimport { isRealValue } from \"../Functions\";\nimport ports from '../ports';\nimport axios from 'axios';\n\nvar Tour = function Tour(props) {\n  useEffect(function () {\n    var obj = sessionStorage.getItem(\"tourInfo\");\n    console.log(\"tourInfo\", props.tourInfo);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"tour-information\"\n  }, __jsx(Nav, null), __jsx(Bgtext, null), __jsx(Container, null, isRealValue(props.tourInfo) ? __jsx(InformationCards, props) : __jsx(React.Fragment, null)), __jsx(Footer, null));\n};\n\nTour.getInitialProps = function _callee(_ref) {\n  var query, pkgNum, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(query.num);\n\n        case 3:\n          pkgNum = _context.sent;\n          // var tourId = await query.\n          pkgNum = pkgNum || 0;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(axios.get(\"\".concat(ports.domain).concat(ports.GetPackageDetail, \"?Id=\").concat(pkgNum)));\n\n        case 7:\n          res = _context.sent;\n          // const cmt = await axios.get(`${ports.domain}${ports.GetComment}?type=PACKAGEDETAIL?refid=`); \n          console.log(\"res.status GetPackageDetail\", res.status);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 11:\n          _context.t0 = _context.sent;\n\n          if (_context.t0) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.t0 = {};\n\n        case 14:\n          json = _context.t0;\n          return _context.abrupt(\"return\", {\n            tourInfo: json\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default connect(function (state) {\n  return state;\n})(Tour);","map":null,"metadata":{},"sourceType":"module"}