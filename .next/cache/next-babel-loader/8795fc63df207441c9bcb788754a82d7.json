{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, Fragment } from \"react\"; //redux\n\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { setStars, setAirlines } from \"../../redux/tourFilters/action\";\nimport { add_item } from \"../../redux/basicdatas/action\"; //UI Libraries\n\nimport { Card, CardBody } from \"reactstrap\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { Collapse, Button } from \"reactstrap\";\nimport Box from \"@material-ui/core/Box\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { MdStarBorder, MdStar, MdClose } from \"react-icons/md\";\nimport StarRating from \"react-rating\"; //Utilities\n\nimport { BarLoading } from \"../../Functions\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  }\n});\nconst useStylesCheckbox = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction valuetext(value) {\n  return `${value}Â°C`;\n}\n\nfunction RangeSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState([20, 37]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.dispatch(set_preis(newValue));\n    props.dispatch(add_item(newValue));\n  }; //console.log(\"props in preis\", props.preis)\n  //console.log(\"basicDatas props in filter\", props.basicDatas)\n\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Slider, {\n    value: value,\n    onChange: (e, value) => handleChange(e, value),\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valuetext\n  }));\n}\n\nfunction SimpleRating() {\n  const [value, setValue] = React.useState(2);\n  return __jsx(\"div\", null, __jsx(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    className: \"star-rating\"\n  }, __jsx(Rating, {\n    name: \"simple-controlled\",\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    }\n  })));\n} // function Score() {\n//   return (\n//     <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n//     <Typography component=\"legend\">Custom icon set</Typography>\n//     <Rating\n//       name=\"customized-icons\"\n//       defaultValue={2}\n//       getLabelText={value => customIcons[value].label}\n//       IconContainerComponent={IconContainer}\n//     />\n//   </Box>\n//   )\n// }\n\n\nconst FilterCollapse1 = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return __jsx(\"div\", {\n    className: \"filter-collapse border-bottom\"\n  }, __jsx(\"p\", {\n    onClick: toggle\n  }, \"\\u062A\\u0648\\u0642\\u0641 \\u0647\\u0627\", __jsx(MdKeyboardArrowDown, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", null)));\n};\n\nconst StarFilter = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n  const starValue = useSelector(state => state.tourFilterReducer.stars);\n  const dispatch = useDispatch();\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  function handleStars(value) {\n    console.log(\"star rating value in seatch Filter :\", value);\n    dispatch(setStars(value));\n  }\n\n  return __jsx(\"div\", {\n    className: \"filter-collapse border-bottom\"\n  }, __jsx(\"p\", {\n    onClick: toggle\n  }, \"\\u0633\\u062A\\u0627\\u0631\\u0647 \\u062F\\u0627\\u0631\", __jsx(MdKeyboardArrowDown, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, props.show ? __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(StarRating, {\n    direction: \"rtl\",\n    emptySymbol: __jsx(MdStarBorder, {\n      color: \"#73c9ca\",\n      size: \"30\"\n    }),\n    fullSymbol: __jsx(MdStar, {\n      color: \"#73c9ca\",\n      size: \"30\"\n    }),\n    fractions: 1,\n    start: 0,\n    stop: 5,\n    initialRating: starValue,\n    onChange: handleStars\n  }), __jsx(\"span\", {\n    className: \"pr-2\",\n    onClick: () => handleStars(0)\n  }, __jsx(MdClose, {\n    size: \"15\"\n  }))) : __jsx(Fragment, null, __jsx(BarLoading, null))));\n};\n\nconst AirlinesFilter = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n  const filteredResults = useSelector(state => state.searchTourReducer.tourResult);\n  const dispatch = useDispatch(); // console.log(\"myallllllPackges\",filteredResults); \n  // const airlineValues= useSelector(state=>state.tourFilterReducer.airlines);\n\n  let airlineValues = [];\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  for (var i = 0; i < filteredResults.length; i++) {\n    for (var j = 0; j < filteredResults[i].Flight.length; j++) {\n      airlineValues.push(filteredResults[i].Flight[j].AirLineTitle_Going);\n      airlineValues.push(filteredResults[i].Flight[j].AirLineTitle_Coming);\n    }\n  }\n\n  const airlinesName = airlineValues.filter((val, id, array) => array.indexOf(val) == id);\n  console.log(\"airlinesName\", airlinesName);\n\n  function airlineHandle(value) {\n    console.log(\"airline value in search Filter :\", value);\n    dispatch(setAirlines(value));\n  } // const reduxAirline = useSelector(state => state.tourFilterReducer.airlines);\n  // console.log(\"reduxAirline\", reduxAirline);\n\n\n  return __jsx(\"div\", {\n    className: \"filter-collapse border-bottom\"\n  }, __jsx(\"p\", {\n    onClick: toggle\n  }, \"\\u0634\\u0631\\u06A9\\u062A \\u0647\\u0648\\u0627\\u067E\\u06CC\\u0645\\u0627\\u06CC\\u06CC\", __jsx(MdKeyboardArrowDown, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, props.show ? __jsx(\"div\", null, airlinesName.map((item, index) => {\n    return __jsx(\"div\", {\n      onClick: () => airlineHandle(item)\n    }, item);\n  })) : __jsx(Fragment, null, __jsx(BarLoading, null))));\n};\n\nconst FilterCollapse3 = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return __jsx(\"div\", {\n    className: \"filter-collapse border-bottom\"\n  }, __jsx(\"p\", {\n    onClick: toggle\n  }, \"\\u0627\\u0645\\u062A\\u06CC\\u0627\\u0632 \\u0647\\u0627\", __jsx(MdKeyboardArrowDown, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", null)));\n};\n\nconst PreisFilter = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return __jsx(\"div\", {\n    className: \"filter-collapse border-bottom\"\n  }, __jsx(\"p\", {\n    onClick: toggle\n  }, \"\\u0642\\u06CC\\u0645\\u062A\", __jsx(MdKeyboardArrowDown, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, props.show ? __jsx(\"div\", null, __jsx(RangeSlider, props)) : __jsx(Fragment, null, __jsx(BarLoading, null))));\n};\n\nconst FilterCollapse6 = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(true);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return __jsx(\"div\", {\n    className: \"filter-collapse\"\n  }, __jsx(\"p\", {\n    onClick: toggle\n  }, \"\\u0633\\u0627\\u06CC\\u0631\", __jsx(MdKeyboardArrowDown, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, props.show ? __jsx(\"div\", null, __jsx(CheckboxesGroup2, null)) : __jsx(Fragment, null, __jsx(BarLoading, null))));\n};\n\nfunction CheckboxesGroup1() {\n  const classes = useStylesCheckbox();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false\n  });\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  const {\n    gilad,\n    jason\n  } = state;\n  const error = [gilad, jason].filter(v => v).length !== 2;\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: gilad,\n      onChange: handleChange(\"gilad\"),\n      value: \"gilad\"\n    }),\n    label: \"\\u0645\\u0627\\u0647\\u0627\\u0646 \\u0627\\u06CC\\u0631\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: jason,\n      onChange: handleChange(\"jason\"),\n      value: \"jason\"\n    }),\n    label: \"\\u062A\\u0627\\u0628\\u0627\\u0646 \\u0627\\u06CC\\u0631\"\n  }))));\n}\n\nfunction CheckboxesGroup2() {\n  const classes = useStylesCheckbox();\n  const [state, setState] = React.useState({\n    gilad: true\n  });\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  const {\n    gilad\n  } = state;\n  const error = [gilad].filter(v => v).length !== 2;\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: gilad,\n      onChange: handleChange(\"gilad\"),\n      value: \"gilad\"\n    }),\n    label: \"\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0647\\u062A\\u0644 \\u0647\\u0627 \\u0628\\u062F\\u0648\\u0646 \\u0642\\u06CC\\u0645\\u062A\"\n  }))));\n}\n\nconst Filter = props => {\n  const {\n    0: showChild,\n    1: setShowChild\n  } = useState(false);\n  const {\n    allPackages\n  } = props;\n  useEffect(() => {\n    function showCm() {\n      setShowChild(true);\n    }\n\n    showCm();\n  }, []);\n  return __jsx(Fragment, null, __jsx(\"div\", {\n    className: \"filter-box\"\n  }, __jsx(Card, null, __jsx(CardBody, null, __jsx(StarFilter, {\n    show: showChild\n  }), __jsx(PreisFilter, _extends({}, props, {\n    show: showChild\n  })), __jsx(AirlinesFilter, {\n    show: showChild\n  })))));\n};\n\nconst mapStateToProps = state => {\n  const basicDatas = state.basicDatasReducer.basicDatas;\n  const preis = state.tourFilterReducer.preis;\n  const rates = state.tourFilterReducer.rates;\n  const airLines = state.tourFilterReducer.airLines;\n  const filteredResults = state.searchTourReducer.filteredResults;\n  return {\n    rates,\n    preis,\n    airLines,\n    basicDatas,\n    filteredResults\n  };\n};\n\nexport default connect(mapStateToProps)(Filter); //export default Filter;","map":null,"metadata":{},"sourceType":"module"}