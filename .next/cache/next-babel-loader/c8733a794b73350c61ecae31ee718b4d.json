{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadHeaderSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadHeaderWatcher),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadTourSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadTourWatcher);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch'; //imports\n\nimport { loadHeaderSuccess, failure, loadTourSuccess, failureTour, loadTour } from './actions';\nimport { actionTypes } from './types';\nimport ports from '../../ports';\nes6promise.polyfill(); //header worker\n\nfunction loadHeaderSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadHeaderSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"\".concat(ports.domain).concat(ports.getPackageGroup));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          _context.next = 9;\n          return put(loadHeaderSuccess(data));\n\n        case 9:\n          _context.next = 11;\n          return put(loadTour(data[0].Id));\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put(failure(_context.t0));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n} //header watcher\n\n\nfunction loadHeaderWatcher() {\n  return _regeneratorRuntime.wrap(function loadHeaderWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actionTypes.LOAD_HEADER, loadHeaderSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //tour worker\n\n\nfunction loadTourSaga(action) {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadTourSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return fetch(\"\".concat(ports.domain).concat(ports.packageList, \"?PackageGroupId=\").concat(action.id));\n\n        case 3:\n          res = _context3.sent;\n          _context3.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context3.sent;\n          _context3.next = 9;\n          return put(loadTourSuccess(data));\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(failureTour(_context3.t0));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n} //tour watcher\n\n\nfunction loadTourWatcher() {\n  return _regeneratorRuntime.wrap(function loadTourWatcher$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actionTypes.LOAD_Tour, loadTourSaga);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport { loadHeaderWatcher, loadTourWatcher };","map":null,"metadata":{},"sourceType":"module"}