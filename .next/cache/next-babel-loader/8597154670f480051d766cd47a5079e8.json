{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './type';\nexport const exampleInitialState = {\n  tourResult: [],\n  error: '',\n  dataExist: true,\n  filteredResults: [],\n  serachParams: {}\n};\n\nfunction reducer(state = exampleInitialState, action) {\n  switch (action.type) {\n    case actionTypes.SEARCH_TOUR_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        tourResult: [],\n        filteredResults: [],\n        dataExist: false\n      });\n\n    case actionTypes.LOAD_SEARCH_TOUR_SUCCESS:\n      return _objectSpread({}, state, {\n        tourResult: action.payload,\n        filteredResults: action.payload,\n        error: \"\",\n        dataExist: true\n      });\n\n    case actionTypes.SET_FILTERED_RESULTS:\n      return _objectSpread({}, state, {\n        filteredResults: action.payload\n      });\n\n    case actionTypes.SET_SEARCH_PARAMS:\n      console.log(\"rrrrrrr\", action.payload);\n      return _objectSpread({}, state, {\n        serachParams: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}