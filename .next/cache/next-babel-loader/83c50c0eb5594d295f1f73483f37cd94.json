{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch'; //imports\n\nimport { loadHeaderSuccess, failure, loadTourSuccess, failureTour, loadTour } from './actions';\nimport { actionTypes } from './types';\nimport ports from '../../ports';\nes6promise.polyfill(); //header worker\n\nfunction* loadHeaderSaga() {\n  try {\n    const res = yield fetch(`${ports.domain}${ports.getPackageGroup}`);\n    const data = yield res.json();\n    yield put(loadHeaderSuccess(data));\n    yield put(loadTour(data[0].Id));\n  } catch (err) {\n    yield put(failure(err));\n  }\n} //header watcher\n\n\nfunction* loadHeaderWatcher() {\n  yield takeLatest(actionTypes.LOAD_HEADER, loadHeaderSaga);\n} //tour worker\n\n\nfunction* loadTourSaga(action) {\n  try {\n    const res = yield fetch(`${ports.domain}${ports.packageList}?PackageGroupId=${action.id}`);\n    const data = yield res.json();\n    yield put(loadTourSuccess(data));\n  } catch (err) {\n    yield put(failureTour(err));\n  }\n} //tour watcher\n\n\nfunction* loadTourWatcher() {\n  yield takeLatest(actionTypes.LOAD_Tour, loadTourSaga);\n}\n\nexport { loadHeaderWatcher, loadTourWatcher };","map":{"version":3,"sources":["C:/Users/Hope/Desktop/KiteSearchEngine/redux/tourTabs/saga.js"],"names":["put","takeLatest","es6promise","loadHeaderSuccess","failure","loadTourSuccess","failureTour","loadTour","actionTypes","ports","polyfill","loadHeaderSaga","res","fetch","domain","getPackageGroup","data","json","Id","err","loadHeaderWatcher","LOAD_HEADER","loadTourSaga","action","packageList","id","loadTourWatcher","LOAD_Tour"],"mappings":"AAAA,SAAUA,GAAV,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP,C,CAEA;;AACA,SAAQC,iBAAR,EAA4BC,OAA5B,EAAsCC,eAAtC,EAAwDC,WAAxD,EAAsEC,QAAtE,QAAqF,WAArF;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEAP,UAAU,CAACQ,QAAX,G,CAEA;;AACA,UAAUC,cAAV,GAA2B;AACvB,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,KAAK,CAACK,MAAO,GAAEL,KAAK,CAACM,eAAgB,EAAzC,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACA,UAAMjB,GAAG,CAACG,iBAAiB,CAACa,IAAD,CAAlB,CAAT;AACA,UAAMhB,GAAG,CAACO,QAAQ,CAACS,IAAI,CAAC,CAAD,CAAJ,CAAQE,EAAT,CAAT,CAAT;AACD,GALH,CAKI,OAAOC,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAACI,OAAO,CAACe,GAAD,CAAR,CAAT;AACD;AACN,C,CAED;;;AACA,UAAUC,iBAAV,GAA8B;AAC1B,QAAMnB,UAAU,CAACO,WAAW,CAACa,WAAb,EAA0BV,cAA1B,CAAhB;AACH,C,CAED;;;AACA,UAAUW,YAAV,CAAuBC,MAAvB,EAA+B;AAC3B,MAAI;AACA,UAAMX,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,KAAK,CAACK,MAAO,GAAEL,KAAK,CAACe,WAAY,mBAAkBD,MAAM,CAACE,EAAG,EAAjE,CAAvB;AACA,UAAMT,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACA,UAAMjB,GAAG,CAACK,eAAe,CAACW,IAAD,CAAhB,CAAT;AACD,GAJH,CAII,OAAOG,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAACM,WAAW,CAACa,GAAD,CAAZ,CAAT;AACD;AACN,C,CAED;;;AACA,UAAUO,eAAV,GAA4B;AACxB,QAAMzB,UAAU,CAACO,WAAW,CAACmB,SAAb,EAAwBL,YAAxB,CAAhB;AACH;;AAED,SAAQF,iBAAR,EAA4BM,eAA5B","sourcesContent":["import {  put,takeLatest } from 'redux-saga/effects'\r\nimport es6promise from 'es6-promise'\r\nimport 'isomorphic-unfetch'\r\n\r\n//imports\r\nimport {loadHeaderSuccess , failure , loadTourSuccess , failureTour , loadTour} from './actions';\r\nimport {actionTypes} from './types'\r\nimport ports from '../../ports';\r\n\r\nes6promise.polyfill()\r\n\r\n//header worker\r\nfunction* loadHeaderSaga() {\r\n    try {\r\n        const res = yield fetch(`${ports.domain}${ports.getPackageGroup}`)\r\n        const data = yield res.json()\r\n        yield put(loadHeaderSuccess(data))\r\n        yield put(loadTour(data[0].Id))\r\n      } catch (err) {\r\n        yield put(failure(err))\r\n      }\r\n}\r\n\r\n//header watcher\r\nfunction* loadHeaderWatcher() {\r\n    yield takeLatest(actionTypes.LOAD_HEADER, loadHeaderSaga)\r\n}\r\n\r\n//tour worker\r\nfunction* loadTourSaga(action) {\r\n    try { \r\n        const res = yield fetch(`${ports.domain}${ports.packageList}?PackageGroupId=${action.id}`)\r\n        const data = yield res.json()\r\n        yield put(loadTourSuccess(data))\r\n      } catch (err) {\r\n        yield put(failureTour(err))\r\n      }\r\n}\r\n\r\n//tour watcher\r\nfunction* loadTourWatcher() {\r\n    yield takeLatest(actionTypes.LOAD_Tour, loadTourSaga)\r\n}\r\n\r\nexport {loadHeaderWatcher , loadTourWatcher} "]},"metadata":{},"sourceType":"module"}