{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst ADD = \"ADD\";\nconst REMOVE = \"REMOVE\";\nconst initialstate = {\n  paymentObj: []\n};\n\nconst reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case ADD:\n      return _objectSpread({}, state, {\n        paymentObj: action.value\n      });\n\n    case REMOVE:\n      return _objectSpread({}, state, {\n        paymentObj: action.value\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Hope/Desktop/KiteSearchEngine/redux/payment/reducer.js"],"names":["ADD","REMOVE","initialstate","paymentObj","reducer","state","action","type","value"],"mappings":";;;;;;AAAA,MAAMA,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,GAAL;AACE,+BAAYK,KAAZ;AAAmBF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAAtC;;AACF,SAAKP,MAAL;AACE,+BAAYI,KAAZ;AAAmBF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAAtC;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAUA,eAAeD,OAAf","sourcesContent":["const ADD = \"ADD\";\r\nconst REMOVE = \"REMOVE\";\r\n\r\nconst initialstate = {\r\n  paymentObj: []\r\n};\r\nconst reducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return { ...state, paymentObj: action.value };\r\n    case REMOVE:\r\n      return { ...state, paymentObj: action.value };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}